<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>net.stickycode.stable.parent</groupId>
    <artifactId>sticky-parent</artifactId>
    <version>1.4</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>

  <groupId>net.stickycode.fintech.stable.20210714</groupId>
  <artifactId>fintech-20210714-example-generated-dockerfile</artifactId>
  <version>1.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>${project.artifactId}</name>
  <description>Model of kubernetes resources</description>
  <inceptionYear>2021</inceptionYear>

  <build>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.33.0</version>
        <executions>
          <execution>
            <id>build-docker-image</id>
            <goals>
              <goal>build</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <showLogs>true</showLogs>
              <verbose>build</verbose>
              <images>
                <image>
                  <alias>${project.artifactId}</alias>
                  <name>${project.artifactId}:${project.version}</name>
                  <build>
                    <registry>${project.artifactId}</registry>
                    <from>library/nginx:1.19-alpine</from>
                    <assembly>
                      <targetDir>/</targetDir>
                      <inline>
                        <fileSets>
                          <fileSet>
                            <directory>src/main/html</directory>
                            <outputDirectory>.</outputDirectory>
                            <includes>
                              <include>**/*html</include>
                            </includes>
                            <fileMode>0644</fileMode>
                            <filtered>false</filtered>
                          </fileSet>
                        </fileSets>
                      </inline>
                    </assembly>
                  </build>
                </image>
              </images>
            </configuration>
          </execution>

          <execution>
            <id>run-docker-image</id>
            <goals>
              <goal>start</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <showLogs>true</showLogs>
              <verbose>build</verbose>
              <images>
                <image>
                  <alias>${project.artifactId}</alias>
                  <name>${project.artifactId}:${project.version}</name>
                  <run>
                    <ports>
                      <port>8080:80</port>
                    </ports>
                    <wait>
                      <log>Configuration complete; ready for start up</log>
                      <time>1000</time>
                      <tcp>
                        <host>localhost</host>
                        <ports>
                          <port>8080</port>
                        </ports>
                      </tcp>
                      <http>
                        <method>GET</method>
                        <status>200</status>
                        <url>http://localhost:8080/index.html</url>
                      </http>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
          </execution>

          <execution>
            <id>stop-docker-images</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <allContainers>true</allContainers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
